class Solution {
public:

    int f(int i,int buy,vector<int>& prices, vector<vector<int>> &dp){

       int ans=0;

       if(i>=prices.size()){

           return 0;
       }

       if(dp[i][buy]!=-1){

           return dp[i][buy];
       }

        if(buy){
               
            ans  = max(-prices[i]+f(i+1,0,prices,dp),f(i+1,1,prices,dp));

        }
        else{

            ans =max(prices[i]+f(i+1,1,prices,dp),f(i+1,0,prices,dp));
        }

        return dp[i][buy]=ans;
    }
    int maxProfit(vector<int>& prices) {

        
        int n=prices.size();
        vector<vector<int>> dp(n,vector<int>(2,-1));
        return f(0,1,prices,dp);
        
    }
};
